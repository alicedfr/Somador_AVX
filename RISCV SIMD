---trabalho 4 (vetorial, SIMD)
use ieee.std_logic_1164.all;

entity TCL_Generic is
  port(
    --inputs
    horloge_i  : in  std_logic;                    
    val_i      : in  std_logic_vector(3 downto 0); 

	  --outputs
    max_o      : out std_logic;                    
    cpt_o      : out std_logic_Vector(3 downto 0)  
  );
end TCL_Generic;

------------------------------------------------------------------------------

USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

ENTITY ALU IS
  PORT (
  ------------------------------------------------------------------------------
  --Insert input ports below
    A,B      : IN  std_logic_vector(31 DOWNTO 0);
    CONTROL  : IN  std_logic_vector(3 DOWNTO 0);                    
  ------------------------------------------------------------------------------
  --Insert output ports below
    C        : OUT std_logic_vector(31 DOWNTO 0);
    zero     : OUT std_logic
    );
END ALU;

ARCHITECTURE TypeArchitecture OF ALU IS
SIGNAL AUX : unsigned(31 DOWNTO 0);
SIGNAL AUX2 : std_logic_vector(31 DOWNTO 0);

BEGIN
process(A,B,CONTROL)
begin
    case CONTROL is 
    when "0000" C = A + B;
    when "0001" C = A - B;
    when "0010" C = A AND B;
    when "0011" C = A OR B;
    when "0100" C = A XOR B;
    when "0101"  AUX = shift_left(unsigned(A), 1);
    when "0110"  AUX = shift_left(unsigned(B), 1);
    when "0111"  AUX = shift_right(unsigned(A), 2);
    when "1000"  AUX = shift_right(unsigned(B), 2);
    when others  C = NOT A AND A;
    end case;
    case CONTROL is 
    when "0000" AUX2 = A + B;
    when "0001" AUX2 = A - B;
    when "0010" AUX2 = A AND B;
    when "0011" AUX2 = A OR B;
    when "0100" AUX2 = A XOR B;
    when others AUX2 = NOT A AND A;
    end case;
    IF AUX2 = "00000000000000000000000000000000" THEN
    zero = '1';
    ELSE
    zero = '0';
    END IF;
    C = AUX2;
    IF CONTROL  "0100" THEN
	C = std_logic_vector(AUX);
	END IF;
end process;
END TypeArchitecture;

------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY CONTROL IS
  PORT (
  ------------------------------------------------------------------------------
  --Inputs:
    opcode        : IN  std_logic_vector(6 DOWNTO 0);                   
    funct3        : IN  std_logic_vector(2 DOWNTO 0);
    funct7        : IN  std_logic_vector(6 DOWNTO 0);
  --outputs:
    ALUOp         : OUT std_logic_vector(3 DOWNTO 0);
    MemtoReg      : OUT std_logic_vector(1 DOWNTO 0);
    ALUSrc,RegWrite,MemWrite,MemRead,PCSrc      : OUT std_logic  
    );
END CONTROL;

ARCHITECTURE TypeArchitecture OF CONTROL IS

BEGIN

process(opcode,funct3,funct7)
begin
if opcode = "0110011" THEN
    if funct3 = "000" then
        IF funct7 = "0000000" THEN
        ALUOp = "0000";
        ALUSrc = '0';
        RegWrite = '1';
        MemWrite = '0';
        MemRead = '0';
        MemtoReg = "00";
        PCSrc = '0';
        elsif funct7 = "0100000" THEN
        ALUOp = "0001";
        ALUSrc = '0';
        RegWrite = '1';
        MemWrite = '0';
        MemRead = '0';
        MemtoReg = "00";
        PCSrc = '0';
        END IF;
    elsif funct3 = "001" THEN
        IF funct7 = "0000000" THEN
        ALUOp = "0101";
        ALUSrc = '0';
        RegWrite = '1';
        MemWrite = '0';
        MemRead = '0';
        MemtoReg = "00";
        PCSrc = '0';
        END IF;
    elsif funct3 = "100" THEN
        if funct7 = "0000000" THEN
        ALUOp = "0100";
        ALUSrc = '0';
        RegWrite = '1';
        MemWrite = '0';
        MemRead = '0';
        MemtoReg = "00";
        PCSrc = '0';
        END IF;
    elsif funct3 = "101" THEN 
        if funct7 = "0000000" THEN
        ALUOp = "0111";
        ALUSrc = '0';
        RegWrite = '1';
        MemWrite = '0';
        MemRead = '0';
        MemtoReg = "00";
        PCSrc = '0';
        END IF;
    elsif funct3 = "110" THEN
        if funct7 = "0000000" THEN
        ALUOp = "0011";
        ALUSrc = '0';
        RegWrite = '1';
        MemWrite = '0';
        MemRead = '0';
        MemtoReg = "00";
        PCSrc = '0';
        END IF;
    elsif funct3 = "111" THEN
        if funct7 = "0000000" THEN
        ALUOP = "0010";
        ALUSrc = '0';
        RegWrite = '1';
        MemWrite = '0';
        MemRead = '0';
        MemtoReg = "00";
        PCSrc = '0';
        END IF;
    END IF;
elsif opcode = "0010011" THEN
    if funct3 = "000" THEN
    ALUOp = "0000";
    ALUSrc = '1';
    RegWrite = '1';
    MemWrite = '0';
    MemRead = '0';
    MemtoReg = "00";
    PCSrc = '0';
    elsif funct3 = "001" THEN
        if funct7 = "0000000" THEN
        ALUOp = "0110";
        ALUSrc = '1';
        RegWrite = '1';
        MemWrite = '0';
        MemRead = '0';
        MemtoReg = "00";
        PCSrc = '0';
        END IF;
    elsif funct3 = "100" THEN 
    ALUOp = "0100";
    ALUSrc = '1';
    RegWrite = '1';
    MemWrite = '0';
    MemRead = '0';
    MemtoReg = "00";
    PCSrc = '0';
    elsif funct3 = "101" THEN
        if funct7 = "0000000" THEN 
        ALUOp = "1000";
        ALUSrc = '1';
        RegWrite = '1';
        MemWrite = '0';
        MemRead = '0';
        MemtoReg = "00";
        PCSrc = '0';
        END IF;
    elsif funct3 = "110" THEN
    ALUOp = "0011";
    ALUSrc = '1';
    RegWrite = '1';
    MemWrite = '0';
    MemRead = '0';
    MemtoReg = "00";
    PCSrc = '0';
    elsif funct3 = "111" THEN
    ALUOp = "0010";
    ALUSrc = '1';
    RegWrite = '1';
    MemWrite = '0';
    MemRead = '0';
    MemtoReg = "00";
    PCSrc = '0';
    END IF;
elsif opcode = "0010111" THEN
ALUOp = "0000";
ALUSrc = '1';
RegWrite = '1';
MemWrite = '0';
MemRead = '0';
MemtoReg = "10";
PCSrc = '0';
elsif opcode = "0110111" THEN
ALUOp = "0000";
ALUSrc = '1';
RegWrite = '1';
MemWrite  '0';
MemRead = '0';
MemtoReg = "10";
PCSrc = '0';
elsif opcode = "0000011" THEN
    if funct3 = "010" THEN 
    ALUOp = "0000";
    ALUSrc = '1';
    RegWrite = '1';
    MemWrite = '0';
    MemRead = '1';
    MemtoReg = "01";
    PCSrc = '0';
    END IF;
elsif opcode = "0100011" THEN
    if funct3 = "010" THEN 
    ALUOp = "0000";
    ALUSrc = '1';
    RegWrite = '0';
    MemWrite = '0';
    MemRead = '1';
    MemtoReg = "00";
    PCSrc = '0';
    END IF;
elsif opcode = "1101111" THEN 
ALUOp = "0000";
ALUSrc = '1';
RegWrite = '1';
MemWrite = '0';
MemRead = '0';
MemtoReg = "10";
PCSrc = '1';
elsif opcode = "1100111" THEN 
    IF funct3 = "000" THEN
    ALUOp = "0000";
    ALUSrc = '1';
    RegWrite = '1';
    MemWrite = '0';
    MemRead = '0';
    MemtoReg = "10";
    PCSrc = '1';
    END IF;
elsif opcode = "1100011" THEN 
    IF funct3 = "000" THEN
    ALUOp = "0001";
    ALUSrc = '0';
    RegWrite = '0';
    MemWrite = '0';
    MemRead = '0';
    MemtoReg = "00";
    PCSrc = '0';
    elsif funct3 = "001" THEN
    ALUOp = "0001";
    ALUSrc = '0';
    RegWrite = '0';
    MemWrite = '0';
    MemRead = '0';
    MemtoReg = "00";
    PCSrc = '0';
    END IF;
ELSE 
ALUOp = "0000";
ALUSrc = '0';
RegWrite = '0';
MemWrite = '0';
MemRead = '0';
MemtoReg = "00";
PCSrc = '0';
END IF;

end process;

END TypeArchitecture;

